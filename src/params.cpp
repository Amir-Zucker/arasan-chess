// Copyright 2015-2017 by Jon Dart. All Rights Reserved.
// This is a generated file. Do not edit.
// Generated 27-Aug-2017 12:55:19 by "tuner -R 50 -c 24 -n 175 /home/jdart/chess/epd/big2.epd"
//

#include "params.h"

const int Params::RB_ADJUST[6] = {329, -50, 603, 160, 141, 323};
const int Params::RBN_ADJUST[6] = {500, -150, 200, -10, -234, -250};
const int Params::QR_ADJUST[5] = {412, 916, 433, -151, -750};
const int Params::KN_VS_PAWN_ADJUST[3] = {0, -2266, -1212};
const int Params::CASTLING[6] = {100, -215, -194, 0, 64, -111};
const int Params::KING_COVER[6][4] = {{95, 189, 98, 90},
{45, 91, 47, 43},
{-29, -58, -30, -27},
{-6, -13, -7, -6},
{-67, -134, -69, -64},
{-174, -348, -180, -165}};
const int Params::KING_COVER_BASE = -100;
const int Params::KING_DISTANCE_BASIS = 312;
const int Params::KING_DISTANCE_MULT = 77;
const int Params::PIN_MULTIPLIER_MID = 496;
const int Params::PIN_MULTIPLIER_END = 530;
const int Params::KRMINOR_VS_R = 0;
const int Params::KRMINOR_VS_R_NO_PAWNS = -1344;
const int Params::KQMINOR_VS_Q = 0;
const int Params::KQMINOR_VS_Q_NO_PAWNS = -1287;
const int Params::MINOR_FOR_PAWNS = 228;
const int Params::ENDGAME_PAWN_ADVANTAGE = 250;
const int Params::PAWN_ENDGAME1 = 311;
const int Params::PAWN_ENDGAME2 = 72;
const int Params::PAWN_ATTACK_FACTOR1 = 9;
const int Params::PAWN_ATTACK_FACTOR2 = 10;
const int Params::MINOR_ATTACK_FACTOR = 30;
const int Params::MINOR_ATTACK_BOOST = 40;
const int Params::ROOK_ATTACK_FACTOR = 47;
const int Params::ROOK_ATTACK_BOOST = 20;
const int Params::ROOK_ATTACK_BOOST2 = 36;
const int Params::QUEEN_ATTACK_FACTOR = 47;
const int Params::QUEEN_ATTACK_BOOST = 47;
const int Params::QUEEN_ATTACK_BOOST2 = 54;
const int Params::KING_ATTACK_COVER_BOOST_BASE = 8;
const int Params::KING_ATTACK_COVER_BOOST_SLOPE = 20;
const int Params::PAWN_THREAT_ON_PIECE_MID = 15;
const int Params::PAWN_THREAT_ON_PIECE_END = 88;
const int Params::PIECE_THREAT_MM_MID = 179;
const int Params::PIECE_THREAT_MR_MID = 416;
const int Params::PIECE_THREAT_MQ_MID = 359;
const int Params::PIECE_THREAT_MM_END = 251;
const int Params::PIECE_THREAT_MR_END = 484;
const int Params::PIECE_THREAT_MQ_END = 750;
const int Params::MINOR_PAWN_THREAT_MID = 69;
const int Params::MINOR_PAWN_THREAT_END = 185;
const int Params::PIECE_THREAT_RM_MID = 151;
const int Params::PIECE_THREAT_RR_MID = 131;
const int Params::PIECE_THREAT_RQ_MID = 546;
const int Params::PIECE_THREAT_RM_END = 128;
const int Params::PIECE_THREAT_RR_END = 105;
const int Params::PIECE_THREAT_RQ_END = 750;
const int Params::ROOK_PAWN_THREAT_MID = 113;
const int Params::ROOK_PAWN_THREAT_END = 225;
const int Params::ENDGAME_KING_THREAT = 281;
const int Params::BISHOP_TRAPPED = -1470;
const int Params::BISHOP_PAIR_MID = 246;
const int Params::BISHOP_PAIR_END = 478;
const int Params::BISHOP_PAWN_PLACEMENT_END = -33;
const int Params::BAD_BISHOP_MID = -41;
const int Params::BAD_BISHOP_END = -39;
const int Params::CENTER_PAWN_BLOCK = -226;
const int Params::OUTSIDE_PASSER_MID = 110;
const int Params::OUTSIDE_PASSER_END = 234;
const int Params::WEAK_PAWN_MID = -21;
const int Params::WEAK_PAWN_END = 0;
const int Params::WEAK_ON_OPEN_FILE_MID = -174;
const int Params::WEAK_ON_OPEN_FILE_END = -172;
const int Params::SPACE = 30;
const int Params::PAWN_CENTER_SCORE_MID = 0;
const int Params::ROOK_ON_7TH_MID = 0;
const int Params::ROOK_ON_7TH_END = 188;
const int Params::TWO_ROOKS_ON_7TH_MID = 200;
const int Params::TWO_ROOKS_ON_7TH_END = 646;
const int Params::ROOK_ON_OPEN_FILE_MID = 169;
const int Params::ROOK_ON_OPEN_FILE_END = 114;
const int Params::ROOK_BEHIND_PP_MID = 0;
const int Params::ROOK_BEHIND_PP_END = 106;
const int Params::QUEEN_OUT = -234;
const int Params::PAWN_SIDE_BONUS = 128;
const int Params::KING_OWN_PAWN_DISTANCE = 73;
const int Params::KING_OPP_PAWN_DISTANCE = 17;
const int Params::QUEENING_SQUARE_CONTROL_MID = 563;
const int Params::QUEENING_SQUARE_CONTROL_END = 421;
const int Params::QUEENING_SQUARE_OPP_CONTROL_MID = -211;
const int Params::QUEENING_SQUARE_OPP_CONTROL_END = -454;
const int Params::WRONG_COLOR_BISHOP = 0;
const int Params::SIDE_PROTECTED_PAWN = -40;
const int Params::KING_OPP_PASSER_DISTANCE[6] = {0, 19, 175, 400, 647, 750};
const int Params::KING_POSITION_LOW_MATERIAL[3] ={300, 225, 156};
const int Params::KING_ATTACK_SCALE[Params::KING_ATTACK_SCALE_SIZE] = {-15, -13, -11, -9, -6, -4, -1, 2, 6, 9, 13, 17, 21, 25, 30, 35, 40, 46, 52, 58, 65, 72, 80, 88, 96, 105, 115, 125, 136, 148, 160, 173, 186, 201, 216, 232, 249, 268, 287, 307, 328, 351, 374, 399, 426, 453, 483, 513, 545, 579, 614, 651, 690, 730, 772, 816, 862, 910, 959, 1011, 1064, 1119, 1176, 1235, 1296, 1358, 1422, 1488, 1555, 1624, 1694, 1765, 1838, 1911, 1986, 2061, 2138, 2214, 2291, 2368, 2446, 2523, 2600, 2676, 2752, 2828, 2902, 2976, 3048, 3119, 3189, 3258, 3325, 3391, 3455, 3517, 3577, 3636, 3693, 3748, 3801, 3852, 3901, 3949, 3994, 4038, 4080, 4120, 4159, 4196, 4231, 4264, 4296, 4327, 4356, 4383, 4409, 4434, 4458, 4480, 4501, 4521, 4541, 4559, 4576, 4592, 4607, 4621, 4635, 4648, 4660, 4671, 4682, 4692, 4702, 4711, 4719, 4727, 4735, 4742, 4749, 4755, 4761, 4767, 4772, 4777, 4782, 4786, 4790, 4794};
const int Params::TRADE_DOWN[8] = {355, 269, 183, 97, 11, 0, 0, 0};
const int Params::PASSED_PAWN[2][8] = {{0, 0, 0, 0, 0, 168, 700, 763}, {0, 0, 0, 0, 116, 516, 1198, 1750}};
const int Params::PASSED_PAWN_FILE_ADJUST[8] = {79, 82, 79, 76, 76, 79, 82, 79};
const int Params::POTENTIAL_PASSER[2][8] = {{0, 0, 0, 0, 0, 19, 750, 0}, {0, 0, 0, 0, 0, 135, 750, 0}};
const int Params::CONNECTED_PASSER[2][8] = {{0, 0, 0, 0, 28, 696, 1250, 1750}, {0, 0, 0, 0, 383, 690, 1250, 1750}};
const int Params::ADJACENT_PASSER[2][8] = {{0, 0, 0, 50, 70, 161, 696, 1321}, {0, 0, 0, 50, 128, 252, 474, 740}};
const int Params::PP_OWN_PIECE_BLOCK[2][21] = {{-333, -297, -324, -197, -333, 0, -192, -243, -52, -293, 0, -283, -58, -280, -80, -282, -126, -333, -97, -333, 0}, {-22, 0, -29, -98, -151, -122, -44, -117, -131, -221, -234, -83, -43, -51, -191, -179, -128, -308, -333, -333, -333}};
const int Params::PP_OPP_PIECE_BLOCK[2][21] = {{-333, -333, -333, -333, -333, -333, -333, -333, -322, -333, -333, -333, -146, -12, -62, -172, 0, 0, -333, -146, -333}, {-129, -96, -38, -103, -122, -60, -161, -51, -109, -64, -67, -195, -37, -26, -8, -327, -170, -144, -333, -333, -333}};
const int Params::DOUBLED_PAWNS[2][8] = {{-366, -9, -178, -161, -161, -178, -9, -366}, {-342, -153, -230, -146, -146, -230, -153, -342}};
const int Params::TRIPLED_PAWNS[2][8] = {{0, -341, -106, 0, 0, -106, -341, 0}, {0, -394, -89, -377, -377, -89, -394, 0}};
const int Params::ISOLATED_PAWN[2][8] = {{0, 0, -81, -93, -93, -81, 0, 0}, {-35, -64, -73, -131, -131, -73, -64, -35}};

const int Params::KNIGHT_PST[2][64] = {{-558, -246, -116, -88, -88, -116, -246, -558, -143, -238, -197, -22, -22, -197, -238, -143, -298, -132, -28, 63, 63, -28, -132, -298, -186, -146, 26, 21, 21, 26, -146, -186, -102, -127, 57, -65, -65, 57, -127, -102, -232, -579, -496, -168, -168, -496, -579, -232, -534, -381, -1, -1, -1, -1, -381, -534, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000}, {-357, -295, -229, -190, -190, -229, -295, -357, -231, -199, -121, -101, -101, -121, -199, -231, -270, -184, -126, 15, 15, -126, -184, -270, -132, -106, 69, 120, 120, 69, -106, -132, -130, -136, 8, -4, -4, 8, -136, -130, -221, -486, -357, -243, -243, -357, -486, -221, -430, -219, -198, -155, -155, -198, -219, -430, -1000, -448, -475, -372, -372, -475, -448, -1000}};
const int Params::BISHOP_PST[2][64] = {{24, 272, 108, 106, 106, 108, 272, 24, 125, 183, 189, 110, 110, 189, 183, 125, -12, 140, 136, 127, 127, 136, 140, -12, -88, -107, 27, 91, 91, 27, -107, -88, -273, -142, -221, -87, -87, -221, -142, -273, -69, -559, -838, -513, -513, -838, -559, -69, -17, -395, -274, -826, -826, -274, -395, -17, -125, -505, -1000, -1000, -1000, -1000, -505, -125}, {-187, -46, -10, -52, -52, -10, -46, -187, -55, -6, -30, 18, 18, -30, -6, -55, -69, -15, 46, 73, 73, 46, -15, -69, -80, 13, 69, 127, 127, 69, 13, -80, -234, -89, -63, 1, 1, -63, -89, -234, 36, -291, -424, -291, -291, -424, -291, 36, -143, -265, -321, -399, -399, -321, -265, -143, 43, 24, -31, -3, -3, -31, 24, 43}};
const int Params::ROOK_PST[2][64] = {{-622, -533, -494, -469, -469, -494, -533, -622, -678, -499, -505, -479, -479, -505, -499, -678, -616, -480, -556, -569, -569, -556, -480, -616, -616, -549, -612, -515, -515, -612, -549, -616, -515, -449, -452, -425, -425, -452, -449, -515, -530, -264, -323, -307, -307, -323, -264, -530, -439, -577, -247, -261, -261, -247, -577, -439, -383, -486, -1000, -1000, -1000, -1000, -486, -383}, {-57, -32, 20, -21, -21, 20, -32, -57, -74, -50, 16, 0, 0, 16, -50, -74, -85, -27, -20, -10, -10, -20, -27, -85, -17, 59, 56, 39, 39, 56, 59, -17, 75, 78, 98, 93, 93, 98, 78, 75, 65, 156, 158, 130, 130, 158, 156, 65, -6, 35, 99, 82, 82, 99, 35, -6, 191, 228, 223, 169, 169, 223, 228, 191}};
const int Params::QUEEN_PST[2][64] = {{62, 67, 62, 144, 144, 62, 67, 62, 119, 125, 150, 186, 186, 150, 125, 119, 44, 121, 144, 73, 73, 144, 121, 44, 121, 155, 119, 150, 150, 119, 155, 121, 140, 108, 135, 163, 163, 135, 108, 140, 72, 66, 151, 163, 163, 151, 66, 72, 9, -100, -6, -72, -72, -6, -100, 9, -114, 366, -47, 97, 97, -47, 366, -114}, {-159, -185, -147, -72, -72, -147, -185, -159, -180, -77, -39, 91, 91, -39, -77, -180, -8, 147, 230, 219, 219, 230, 147, -8, 60, 262, 325, 400, 400, 325, 262, 60, 129, 412, 475, 608, 608, 475, 412, 129, 127, 331, 651, 650, 650, 651, 331, 127, 275, 364, 602, 753, 753, 602, 364, 275, 3, 46, 212, 293, 293, 212, 46, 3}};
const int Params::KING_PST[2][64] = {{427, 535, 244, 328, 328, 244, 535, 427, 633, 592, 359, 502, 502, 359, 592, 633, 104, 417, -121, -111, -111, -121, 417, 104, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -960, -1000, -1000, -1000, -1000, -960, -1000, -1000, -994, 1000, -1000, -1000, 1000, -994, -1000}, {-674, -642, -665, -688, -688, -665, -642, -674, -557, -582, -620, -605, -605, -620, -582, -557, -596, -600, -560, -549, -549, -560, -600, -596, -557, -524, -461, -439, -439, -461, -524, -557, -461, -416, -338, -316, -316, -338, -416, -461, -443, -365, -312, -280, -280, -312, -365, -443, -432, -394, -365, -364, -364, -365, -394, -432, -695, -505, -497, -489, -489, -497, -505, -695}};

const int Params::KNIGHT_MOBILITY[9] = {-466, -221, -96, -30, 16, 71, 93, 86, 47};
const int Params::BISHOP_MOBILITY[15] = {-327, -200, -102, -40, 19, 74, 103, 113, 162, 179, 180, 217, 266, 131, 90};
const int Params::ROOK_MOBILITY[2][15] = {{-333, -218, -164, -136, -123, -73, -40, 34, 59, 78, 108, 103, 232, 212, 333}, {-333, -180, -65, 46, 102, 131, 143, 164, 211, 228, 262, 296, 308, 274, 212}};
const int Params::QUEEN_MOBILITY[2][24] = {{-200, -54, -77, -33, 5, 45, 88, 114, 140, 179, 173, 206, 201, 204, 175, 177, 225, 266, 333, 333, 333, 333, 333, 333}, {-333, -333, -333, -250, -150, -27, 148, 119, 211, 182, 205, 277, 235, 311, 282, 292, 333, 333, 294, 267, 284, 281, 214, 82}};
const int Params::KING_MOBILITY_ENDGAME[5] = {-333, -116, 25, 90, 112};

const int Params::KNIGHT_OUTPOST[2][64][2] = {{{0, 0},{0, 0},{0, 0},{0, 0},{0, 0},{0, 0},{0, 0},{0, 0},{0, 0},{0, 0},{0, 0},{0, 0},{0, 0},{0, 0},{0, 0},{0, 0},{0, 0},{0, 0},{0, 0},{0, 0},{0, 0},{0, 0},{0, 0},{0, 0},{0, 0},{0, 0},{0, 0},{0, 0},{0, 0},{0, 0},{0, 0},{0, 0},{9, 0},{164, 160},{155, 108},{405, 123},{405, 123},{155, 108},{164, 160},{9, 0},{0, 0},{500, 340},{500, 349},{264, 372},{264, 372},{500, 349},{500, 340},{0, 0},{0, 7},{8, 2},{40, 5},{9, 50},{9, 50},{40, 5},{8, 2},{0, 7},{0, 0},{0, 1},{0, 0},{0, 7},{0, 7},{0, 0},{0, 1},{0, 0}},{{0, 0},{0, 0},{0, 0},{0, 0},{0, 0},{0, 0},{0, 0},{0, 0},{0, 0},{0, 0},{0, 0},{0, 0},{0, 0},{0, 0},{0, 0},{0, 0},{0, 0},{0, 0},{0, 0},{0, 0},{0, 0},{0, 0},{0, 0},{0, 0},{0, 0},{0, 0},{0, 0},{0, 0},{0, 0},{0, 0},{0, 0},{0, 0},{0, 56},{243, 190},{279, 228},{500, 278},{500, 278},{279, 228},{243, 190},{0, 56},{93, 216},{500, 440},{500, 471},{500, 397},{500, 397},{500, 471},{500, 440},{93, 216},{500, 0},{240, 159},{62, 167},{443, 0},{443, 0},{62, 167},{240, 159},{500, 0},{500, 20},{481, 280},{500, 500},{221, 308},{221, 308},{500, 500},{481, 280},{500, 20}}};
const int Params::BISHOP_OUTPOST[2][64][2] = {{{0, 0},{0, 0},{0, 0},{0, 0},{0, 0},{0, 0},{0, 0},{0, 0},{0, 0},{0, 0},{0, 0},{0, 0},{0, 0},{0, 0},{0, 0},{0, 0},{0, 0},{0, 0},{0, 0},{0, 0},{0, 0},{0, 0},{0, 0},{0, 0},{0, 0},{0, 0},{0, 0},{0, 0},{0, 0},{0, 0},{0, 0},{0, 0},{111, 278},{85, 157},{355, 179},{344, 173},{344, 173},{355, 179},{85, 157},{111, 278},{327, 200},{500, 348},{500, 500},{371, 371},{371, 371},{500, 500},{500, 348},{327, 200},{63, 229},{0, 390},{20, 313},{0, 371},{0, 371},{20, 313},{0, 390},{63, 229},{115, 87},{8, 134},{0, 203},{0, 13},{0, 13},{0, 203},{8, 134},{115, 87}},{{0, 0},{0, 0},{0, 0},{0, 0},{0, 0},{0, 0},{0, 0},{0, 0},{0, 0},{0, 0},{0, 0},{0, 0},{0, 0},{0, 0},{0, 0},{0, 0},{0, 0},{0, 0},{0, 0},{0, 0},{0, 0},{0, 0},{0, 0},{0, 0},{0, 0},{0, 0},{0, 0},{0, 0},{0, 0},{0, 0},{0, 0},{0, 0},{0, 0},{265, 191},{389, 165},{496, 192},{496, 192},{389, 165},{265, 191},{0, 0},{0, 0},{500, 334},{500, 500},{500, 282},{500, 282},{500, 500},{500, 334},{0, 0},{0, 0},{500, 0},{82, 0},{500, 0},{500, 0},{82, 0},{500, 0},{0, 0},{0, 0},{500, 0},{374, 0},{500, 75},{500, 75},{374, 0},{500, 0},{0, 0}}};


